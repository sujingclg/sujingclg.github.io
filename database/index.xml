<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库 on Notes</title><link>http://localhost/database/</link><description>Recent content in 数据库 on Notes</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 31 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost/database/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL教程</title><link>http://localhost/database/sql/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>http://localhost/database/sql/</guid><description>聚合函数（Aggregate Functions） SELECT MAX(invoice_total) as max, MIN(invoice_total) as min, AVG(invoice_total) as avg, SUM(invoice_total) as total_sales FROM invoices; SELECT COUNT(payment_date) AS no_of_paid, -- 注意count不统计null值 COUNT(*) AS no_of_invoices -- 统计全部值 FROM invoices; SELECT &amp;#39;Q1 2019&amp;#39; AS data_range, SUM(invoice_total) AS total_sales, SUM(payment_total) AS total_payments, SUM(invoice_total - payment_total) AS unpaid FROM invoices WHERE invoice_date BETWEEN &amp;#39;2019-01-01&amp;#39; AND &amp;#39;2019-03-31&amp;#39; UNION SELECT &amp;#39;Q2 2019&amp;#39; AS data_range, SUM(invoice_total) AS total_sales, SUM(payment_total) AS total_payments, SUM(invoice_total - payment_total) AS unpaid FROM invoices WHERE invoice_date BETWEEN &amp;#39;2019-04-01&amp;#39; AND &amp;#39;2019-06-30&amp;#39; UNION SELECT &amp;#39;Total&amp;#39; AS data_range, SUM(invoice_total) AS total_sales, SUM(payment_total) AS total_payments, SUM(invoice_total - payment_total) AS unpaid FROM invoices WHERE invoice_date BETWEEN &amp;#39;2019-01-01&amp;#39; AND &amp;#39;2019-06-30&amp;#39;; data_range total_sales total_payments unpaid Q1 2019 699.</description></item><item><title>注入攻击</title><link>http://localhost/database/injection-attack/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>http://localhost/database/injection-attack/</guid><description> 识别漏洞 如下请求如果结果相同，说明很可能存在 SQL 注入漏洞
http://www.victim.com/showproducts.php?category=bikes # 原始请求 http://www.victim.com/showproducts.php?category=bi&amp;#39;||&amp;#39;kes # Oracle 和 PostgreSQL http://www.victim.com/showproducts.php?category=bi&amp;#39;+&amp;#39;kes # MS SQLServer http://www.victim.com/showproducts.php?category=bi&amp;#39; &amp;#39;kes # MySQL</description></item></channel></rss>