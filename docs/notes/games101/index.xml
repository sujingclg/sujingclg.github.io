<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Games 101 on 计算机图形学基础</title><link>https://sujingclg.github.io/docs/notes/games101/</link><description>Recent content in Games 101 on 计算机图形学基础</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sujingclg.github.io/docs/notes/games101/index.xml" rel="self" type="application/rss+xml"/><item><title>光栅化</title><link>https://sujingclg.github.io/docs/notes/games101/rasterization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sujingclg.github.io/docs/notes/games101/rasterization/</guid><description>光栅化 # Rasterization
离散化三角形 # Triangles
What is a screen?
An array of pixels Size of the array: resolution A typical kind of raster display Raster == screen in German（屏幕的德语词汇）
Rasterize == drawing onto the screen Pixel (FYI, short for “picture element”)
For now: A pixel is a little square with uniform color Color is a mixture of (red, green, blue) 光栅化步骤 # 从变换空间[-1,1]^3^映射到到屏幕空间。首先忽略z方向，使用视口变换将xy空间映射到屏幕。</description></item><item><title>着色</title><link>https://sujingclg.github.io/docs/notes/games101/shading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sujingclg.github.io/docs/notes/games101/shading/</guid><description>着色 # Shading
定义：对不同的物体应用不同材质的过程。 着色具有局部性，即不考虑阴影。 Blinn-Phong 反射模型 # Blinn-Phong Reflectance Model
分解为漫反射、高光、环境光三项。
漫反射 - Diffuse # 只考虑光照强度和方向，不考虑观察方向。
\[L_d = k_d \frac{I}{r^2}{\rm max}(0, \vec n \cdot \vec l)\] 其中：
L~d~ : diffusely reflected light k~d~ : diffuse coefficient (color) I/r^2^ : energy arrived at the shading point max(0, n · l) : energy received by the shading point 高光 - Specular Term # \[半程向量: h = {\rm bisector}(\vec v, \vec l) = \frac {\vec v &amp;#43; \vec l}{||\vec v &amp;#43; \vec l||} \\ L_s = k_s \frac{I}{r^2} {\rm max}(0, {\rm cos} \alpha)^p = k_s \frac{I}{r^2} {\rm max}(0, \vec n \cdot \vec h)^p\] 半程向量为入射光线与反射光线在观察点处的角平分线所在的向量。 当且仅当半程向量接近物体表面法线时，反射光线呈现高光态。 指数p值越大，越接近镜面，表面越光滑。 环境光 - Ambient # $$ L_a = k_a + I_a $$</description></item><item><title>光线追踪</title><link>https://sujingclg.github.io/docs/notes/games101/ray-tracing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sujingclg.github.io/docs/notes/games101/ray-tracing/</guid><description>光线追踪 # Ray Tracing
本节的光线追踪方法属于 Whitted-Style 光线追踪。
导论 # 光线追踪 vs 光栅化 # 光线追踪和光栅化是两种不同的成像方式。之所以需要光线追踪，是因为光栅化在处理全局效果方面表现不好，尤其是光线弹射超过一次的场景。全局效果(Global effects)包括软阴影(Soft shadows)，光面反射(Glossy reflection)，间接光照(Indirect illumination)。
光栅化是一种很快的、但是很近似的渲染方法，因此图像质量较低。光栅化可以轻松做到实时渲染，实时渲染要求每秒超过30帧。
光线追踪的步骤 # 光线追踪的主要步骤是计算光线和物体求交，而其中最重要的是计算光线和三角形求交。光线和三角形片元求交，可以分解为两步：
光线和三角形片元所在平面求交； 判断交点是否在三角形片元内部。 光线追踪的代表算法 # Möller Trumbore Algorithm：一种快速判定光线和三角形片元是否相交的算法。 Whitted-Style Ray Tracing：一种光线追踪的实现方式，此外还有路径追踪。 包围盒 # Axis-Aligned Bounding Box
Axis-Aligned Bounding Box (AABB) (轴对⻬包围盒)：一种加速光线追踪的技术，其理论是假设空间中存在这样一种包围盒，其三个面和坐标系平行，将几何体完全包裹进来，如果光线不会和包围盒相交，则一定不会和其内部的几何体相交。此方法通过减少不必要的对三角形片元与光线的相交计算，大幅加速光线追踪的计算时间。
如何判断包围盒与光线是否相交？ # 光线只在进入包围盒所有的平面才算进入包围盒。光线只在离开任一包围盒的平面就算离开包围盒。 对每个平面对，计算 t~min~ 和 t~max~ ，可以为负值。 对包围盒而言，t~enter~ = max{t~min~}, t~exit~ = min{t~max~}。 从物理规律上看，必然 t~enter~ &amp;lt; t~exit~ ，说明光线会在包围盒内部经过了一段时间，但他们不一定相交。 如果 t~exit~ &amp;lt; 0，说明包围盒在光线的后面，他们不相交。 如果 t~exit~ &amp;gt;= 0 且 t~enter~ &amp;lt; 0，说明光源在包围盒内部，他们必然相交。 光线和包围盒有交点的充要条件是 t~enter~ &amp;lt; t~exit~ &amp;amp;&amp;amp; t~exit~ &amp;gt;= 0。 AABB加速光线追踪的过程 # 两个概念：均匀的格子(Uniform grids)，空间划分(Spatial partitions)。</description></item><item><title>路径追踪</title><link>https://sujingclg.github.io/docs/notes/games101/path-racing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sujingclg.github.io/docs/notes/games101/path-racing/</guid><description>路径追踪 # Path Tracing
辐射度量学 # Basic radiometry
上述提到的方法均属于 Whitted-Style 光线追踪，由于此方法的光照强度等物理量没有被精确定义，导致最终的结果不真实。辐射度量学用于精确定义与光照相关的物理量，包括精确描述光与物体表面如何作用，精确描述光源、材质、光线的传播方法等物理量。
Radiant Intensity # Definition: The radiant (luminous) intensity is the power per unit solid angle (⽴体⻆) emitted by a point light source. 光源在单位立体角上辐射的能量。
推导过程如下，其中r为到原点的距离，θ为立体角矢量与z轴正向的夹角，Φ为立体角矢量在x-y平面的投影与x轴的夹角。r∈[0,+∞)，θ∈[0, π]， φ∈[0,2π]。
球坐标中单位球面的定义：
\[{\rm d} A = (r {\rm d}\theta)(r {\rm sin}\theta {\rm d}\Phi) = r^2 {\rm sin}\theta \, {\rm d}\theta {\rm d}\Phi\] 球坐标中立体角的定义：</description></item></channel></rss>